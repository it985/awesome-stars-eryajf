🤩 我的star列表，0,8,16自动更新 🤩
<div>
<img src="https://camo.githubusercontent.com/82291b0fe831bfc6781e07fc5090cbd0a8b912bb8b8d4fec0696c881834f81ac/68747470733a2f2f70726f626f742e6d656469612f394575424971676170492e676966" width="800"  height="3">
</div><br>

## Table of Contents

<% 
// 预处理所有仓库，存储所有语言的仓库
const allRepositories = [];
let totalRepositories = 0;

// 将仓库数据按语言存储到 allRepositories 中
stars.forEach(([language, repositories]) => {
  const sortedRepositories = repositories.slice().sort((a, b) => b.stargazers_count - a.stargazers_count);
  allRepositories.push({ language, repositories: sortedRepositories });
  totalRepositories += sortedRepositories.length;
});

// 扁平化所有仓库并进行排序
const flattenedRepositories = allRepositories.flatMap(({ repositories }) => repositories);
const sortedFlattenedRepositories = flattenedRepositories.sort((a, b) => b.stargazers_count - a.stargazers_count);

// 存储每种语言的前 100 个仓库
const result = [];
let start = 0;

while (start < sortedFlattenedRepositories.length) {
  let end = start + 100;
  const topRepositories = sortedFlattenedRepositories.slice(start, end);

  if (topRepositories.length > 0) {
    // 找到所有仓库在各自语言下
    const languageCounts = {};
    topRepositories.forEach(repo => {
      allRepositories.forEach(({ language, repositories }) => {
        if (repositories.includes(repo)) {
          languageCounts[language] = (languageCounts[language] || 0) + 1;
        }
      });
    });

    Object.entries(languageCounts).forEach(([language, count]) => {
      const languageRepos = topRepositories.filter(repo => {
        const langRepos = allRepositories.find(entry => entry.language === language).repositories;
        return langRepos.includes(repo);
      });

      result.push({ language, repositories: languageRepos });
    });
  }

  start += 100;
}
%>

<% result.forEach(({ language, repositories }) => { %>
## <%= language %>
  <% repositories.forEach(repo => { %>
- [<%= repo.full_name %>](<%= repo.html_url %>) - <%= repo.description ? repo.description.slice(0, 100) : '' %>
  <% }); %>
<% }); %>

